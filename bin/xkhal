#!/usr/bin/env python2
# vim: set ts=4 sw=4 expandtab sts=4:
# Copyright (c) 2013-2014 Christian Geier & contributors
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

import sys

try:
    from setproctitle import setproctitle
except ImportError:
    setproctitle = lambda x: None

from khal import ConfigurationParser
from khal import controllers
from khal import capture_user_interruption
from khal import khalendar
from datetime import datetime, timedelta

capture_user_interruption()
setproctitle('xkhal')

# Read configuration.
conf_parser = ConfigurationParser('khal is a CalDAV based calendar')
conf = conf_parser.parse()

if conf is None:
    sys.exit(1)

if conf.debug:
    conf_parser.dump(conf)

collection = khalendar.CalendarCollection()
for calendar_name in conf.active_calendars:
    cal_conf = conf.calendars[calendar_name]
    collection.append(khalendar.Calendar(
        name=calendar_name,
        dbpath=conf.sqlite.path,
        path=cal_conf['path'],
        readonly=cal_conf['readonly'],
        color=cal_conf['color'],
        unicode_symbols=False, # because terminals don't like them
        local_tz=conf.default.local_timezone,
        default_tz=conf.default.default_timezone
    ))
    now = datetime.now()
    days_30 = timedelta(days=30)
    for evt in cal.get_by_time_range(now, now + days_30):
        print evt.compact(now, timeformat="%Y-%m-%d %H:%M")

# xkhal ends here
